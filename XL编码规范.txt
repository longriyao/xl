一，数据库设计  
        外    键： user_id category_id  
        字段顺序：id 外键(user_id) 索引(username title(标题)  ) 其他字段(userpwd)   
        常用字段名： 
            文章类：
                id
                author(作者)  【comefrom】
                content(文章内容) 
                remark(备注) 
                pic(照片)

                status(状态) recommend(推荐) views(访问量)
                time(除非时间有细分) 

            分类：
                id
                name(类名称)
                description(描述)
                pic(照片)

            常用总结：
            title name 存英文    varchar(20)
            title name 存中文 varchar(50) 
二，
Index: 
    视图控制器：搭建后台架构  index top left right

    目录结构：
    |Application  应用
        |Common 前后应用的公用配置 公用函数库
        |Admin   
            |Public 后台的公共 公用头，尾
    |ThinkPHP 核心库
    |Public 公用js库，字体库 第三方插件 上传目录 
        
    模块划分：模块划分尽量清晰，保证一个控制器拥有增删改查基本操作以及其他附加操作。文章和分类 用户和用户组，一般先开发父类 

    控制器：
        index 显示列表 （视图控制器） 
        add  添加（视图控制器）   (满足原则：入口个性化，中间层通用化)
        addDo 添加处理 （处理控制器）    
        edit 编辑 （视图控制器）  注意：视图要加隐藏id 
        edtiDo 编辑处理 （处理控制器）
        delDo 删除处理 （处理控制器）

        命名空间：  namespace 应用\Controller;
                    use Think\Controller;
        CommonController: 用于权限验证，尽量最后编写   _initialize()  
    视图：
        index
        add 
        edit    比add多了一个 隐藏id。


        所有form最好都加上: enctype="multipart/form-data" 
        
    常量： 
        1 --用于URL 模板和控制器里的URL
        __ROOT__: /xl  
        __APP__:/xl/index.php     
        __MODULE__: /xl/index.php/Admin

        2 --用于加载很存储文件 相对于主入口文件
        APP_PATH: ./Application/  
        COMMON_PATH: ./Application/Common/

        3 绝对地址
        THINK_PATH: D:\wamp\www\xl\ThinkPHP/ 
    封装：
        公用的东西要封装。
        1 函数分装 与数据库的无关功能函数  
            全局函数(Aplication/Common)  
            应用内部的函数 (Aplication/Admin/Common)
        2 类封装  与数据库有关的操作 
            全局模型类 (Aplication/Common/Model)

    开发流程：
        add  
        addDo  
        index 含有edit入口  del入口
        edit 
        editDo
        del

    命名规范： 面向对象：upFile()  过程式函数： up_file() 




三，操作规范
    参照在做，编辑在右。


